package com.example.demo;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.Annotation.*;

import java.util.List;

@RestController
@RequestMapping("/clientes");


public class UsuarioController {
	
	
	private final UsuarioRepository usuarioRepository;
	
	@Autowired
	public UsuarioController(UsuarioRepository usuarioRepository) {
		this.usuarioRepository = usuarioRepository;
	}
	
	
	@GetMapping
	public List<Usuario> obtenerUsuario() {
		return UsuarioRepository.findAll();
	}
	
	
	@GetMapping("/{id}")
	public ResponseEntity<Cliente> actualizarCliente(@PathVariable Integer id) {
		return usuarioRepository.findById(id)
				.map(existingCliente -> {
					existingCliente.setDni(cliente.getDni());
					existingCliente.setNombre(cliente.getNombre());
					existingCliente.setApellido(cliente.getApellido());
					existingCliente.setDomicilio(cliente.getDomicilio());
					existingCliente.setEmail(cliente.getEmail());
					existingCliente.setFechaDeNacimiento(cliente.getFechaDeNacimiento());
					existingCliente.setNumeroDePasaporte(cliente.getNumeroDePasaporte());
					existingCliente.setFechaDeVencimientoDePasaporte(cliente.getFechaDeVencimientoDePasaporte());
					Usuario clienteActualizado = usuarioRepository.save(existingCliente);
					return ResponseEntity.ok().body(clienteActualizado);
				});
				.orElse(ResponseEntity.notFound().buikd());
	
	@PostMapping // m√©todo post
	
	public ResponseEntity<Usuario> crearUsuario(@RequestBody Usuario usuario) {
		Usuario nuevoUsuario = usuarioRepository.save(usuario);
		return ResponseEntity.status(HttpStatus.CREATED).body(nuevoUsuario);
	}
	
}
